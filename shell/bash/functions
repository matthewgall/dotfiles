function myip {
    curl -s ipinfo.io | jq -r '. | "\(.ip) (\(.hostname))"'
}
function ptr {
    ip=${1}
    dig +short -x $ip | sed 's/.$//g'
}
function npm-update {
    npm outdated | awk 'NR>1 {print $1"@"$4}' | xargs npm install
}

# weron
function weronmgr {
    weron manager --raddr $WERON_ADDR --api-password $WERON_MGR_PASSWORD $@
}

# rsync.net
function rsnet {
    ssh ch-s011.rsync.net "$@"
}

# findabuse.email
function abusedb {
    ip=${1:-blank}
    if [ $ip = "blank" ]; then
        echo -e "You must provide an IP address to lookup"
        return -1
    fi
    curl -s https://api.findabuse.email/api/v1/$1 | jq -r ".[].contacts.abuse[]"
}

# urlscan.io
function urlscan {
    url=${1:-blank}
    tag=${2:-osint}
    vis=${3:-public}

    if [ $url = "blank" ]; then
        echo -e "You must provide a URL to submit"
        return -1
    fi

    # Perform lookup
    data=$(curl -s -X POST "https://urlscan.io/api/v1/scan/" \
      -H "Content-Type: application/json" \
      -H "API-Key: $URLSCAN_API" \
      -d "{\"url\": \"$url\", \"visibility\": \"$vis\", \"tags\": [\"$tag\"]}")
    status=$(echo $data | jq -r .status)

    # Check for an error code
    if [ $status = "400" ]; then
        echo $data | jq -r .description
        return -1
    fi
  
    # Otherwise, return
    echo $data | jq .
}

# wireguard utilities
function wg-util {
    action=${1:-list}

    if [ $action = "list" ]; then
        sudo ls /etc/wireguard/ | sed 's/\.conf//g'
    elif [ $action = "up" ]; then
        sudo wg-quick up "$@"
    elif [ $action = "down" ]; then
        sudo wg-quick down "$@"
    fi
}

# tailscale
function ts-ip {
    host=${1:-blank}
    
    if [ $host = "blank" ]; then
        echo -e "You must provide a hostname to lookup"
        return -1
    fi

    tailscale status | grep "$host" | cut -d ' ' -f 1
}

# phishing.fyi
function phishing {
    url=${1:-blank}

    if [ $url = "blank" ]; then
        echo "No URL has been provided, unable to submit to phishing.fyi"
        return -1
    fi

    data=$(curl -s https://phishing.fyi/submit -X POST --data "url=$url")
    echo $data
}

# throwaway.cloud
function disposable {
    email=${1:-blank}

    if [ $email = "blank" ]; then
        echo "No e-mail address has been provided"
        return -1
    fi

    curl -s "https://throwaway.cloud/api/v1/email/$1" | jq -r '.isDisposable'
}
